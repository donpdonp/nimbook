---
  -
    name: idex
    active: true
    maker_fee: 0.1
    taker_fee: 0.2
    trade_gas: 140000
    deposit_gas: 35717
    withdrawal_gas: 101504 # their estimate
    market_list:
      urls: 
        - https://api-regional.idex.market/returnTicker?region=USA
        - https://api.idex.market/returnCurrencies   
      jq: |
        .[1] as $coin |
        .[0] | to_entries |
        map(
          (.key|split("_")) as $key_parts |
          $key_parts.[0] as $quote_symbol |
          $key_parts.[1] as $base_symbol |
          {key, value, base_coin: ($coin.[$base_symbol] + { symbol: $base_symbol }),
           quote_coin: ($coin.[$quote_symbol] + { symbol: $quote_symbol })}
        )|
        map({
          id: .key,
          base: .base_coin.symbol,
          quote: .quote_coin.symbol,
          quantity_decimals: .base_coin.decimals,
          price_decimals: .quote_coin.decimals,
          min_order_size: "1",
          base_contract: .base_coin.address,
          quote_contract: .quote_coin.address
        })
    url: https://api.idex.market/returnOrderBook?market=%quote%_%base%&count=50
    jq:
      bids: >-
        .bids |
        map([(.amount | tonumber), (.price | tonumber)])
      asks: >-
        .asks |
        map([(.amount | tonumber), (.price | tonumber)])
    ws_url: 
  -
    name: kyber
    active: false
    maker_fee: 0.0
    taker_fee: 0.0
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://api.kyber.network/market
      jq: |
        .data | map({
        id: .pair, 
        base: .base_symbol, 
        quote: .quote_symbol, 
        quantity_decimals: .base_decimals, 
        price_decimals: .quote_decimals, 
        min_order_size: "1",
        base_contract: .base_address,
        quote_contract: .quote_address
        })

    url: https://api.oasisdex.com/v2/orders/%base%/%quote%
    jq:
      bids: >-
        .data.bids |
        map([(.[1] | tonumber), (.[0] | tonumber)])
      asks: >-
        .data.asks |
        map([(.[1] | tonumber), (.[0] | tonumber)])
    ws_url: 
  -
    name: oasis
    active: true
    maker_fee: 0.0
    taker_fee: 0.0
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://api.oasisdex.com/v2/pairs
      jq: |
        {"ZRX":"99f498", 
         "BAT":"2887ef",
         "REP":"45e862",
         "MKR":"a579a2"
         } as $contracts | .data | to_entries | map({
        id: .key, 
        base: .value.base, 
        quote: .value.quote, 
        quantity_decimals: .value.basePrecision, 
        price_decimals: .value.quotePrecision, 
        min_order_size: "1",
        base_contract: ($contracts.[.value.base] // "_oasis"),
        quote_contract: ($contracts.[.value.quote] // "_oasis")
        })

    url: https://api.oasisdex.com/v2/orders/%base%/%quote%
    jq:
      bids: >-
        .data.bids |
        map([(.[1] | tonumber), (.[0] | tonumber)])
      asks: >-
        .data.asks |
        map([(.[1] | tonumber), (.[0] | tonumber)])
    ws_url: 
  -
    name: switcheo
    active: true
    maker_fee: 0.2
    taker_fee: 0.2
    trade_gas: 180000 # two fills
    deposit_gas: 102105 # deposit + erc20 approve
    withdrawal_gas: 97000 # their estimate
    market_list:
      urls: 
        - https://api.switcheo.network/v2/exchange/pairs?show_details=1
        - https://api.switcheo.network/v2/exchange/tokens
      jq: |
        def dec_to_float(d): (. | length) as $len | if $len < d then 
        "0."+ ("0" * (d-$len))+ .
        else 
        .[0:($len-d)]+"."+.[($len-d):$len]
        end;
        .[1] as $tokens |
        .[0] | reduce .[] as $item 
        ([]; 
        $tokens[$item.baseAssetSymbol] as $base_token |
        $tokens[$item.quoteAssetSymbol] as $quote_token |
        if $quote_token and $base_token.trading_active then 
        . + [{id: $item.name, 
        base: $item.baseAssetSymbol, 
        quote: $item.quoteAssetSymbol, 
        quantity_decimals: $item.precision, 
        price_decimals: $item.precision, 
        min_order_size: ($quote_token.minimum_quantity | dec_to_float($quote_token.decimals)),
        base_contract: $item.baseContract,
        quote_contract: $item.quoteContract
        }] end )

    url: https://api.switcheo.network/v2/offers/book?pair=%base%_%quote%
    jq:
      bids: >-
        .bids |
        map([(.quantity | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.quantity | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.switcheo.io
  -
    name: tokenstore
    active: false
    maker_fee: 0.0
    taker_fee: 0.0
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://v1-1.api.token.store/pairs
      jq: |
        map({id: .id, 
        base: .fromSymbol, 
        quote: .toSymbol, 
        quantity_decimals: 8, 
        price_decimals: 8, 
        min_order_size: "1",
        base_contract: "tknsor",
        quote_contract: "tknsor"
        })

    url: https://v1-1.api.token.store/orderbook/%quote%_%base%
    jq:
      bids: >-
        .bids |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.radarrelay.com/v3
  -
    name: radarrelay
    active: true
    maker_fee: 0.0
    taker_fee: 0.0
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://api.radarrelay.com/v3/markets
      jq: |
        map({id: .id, 
        base: (.id|split("-")[0]), 
        quote: (.id|split("-")[1]), 
        quantity_decimals: .quoteTokenDecimals, 
        price_decimals: .baseTokenDecimals, 
        min_order_size: .minOrderSize,
        base_contract: .baseTokenAddress,
        quote_contract: .quoteTokenAddress
        })

    url: https://api.radarrelay.com/v3/markets/%base%-%quote%/book
    jq:
      bids: >-
        .bids |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.radarrelay.com/v3
    #0x SRA ws_url: wss://ws.radarrelay.com/0x/v3
  -
    name: ddex-v3
    active: true
    maker_fee: 0.1
    taker_fee: 0.3
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://api.ddex.io/v3/markets
      jq: |
        .data.markets | map({
          base: (.id|split("-")[0]), 
          quote: (.id|split("-")[1]), 
          quantity_decimals: .amountDecimals, 
          price_decimals: .priceDecimals, 
          min_order_size: .minOrderSize,
          base_contract: .baseTokenAddress,
          quote_contract: .quoteTokenAddress
        })

    url: https://api.ddex.io/v3/markets/%base%-%quote%/orderbook
    jq:
      bids: >-
        .data.orderBook.bids |
        map([(.amount | tonumber), (.price | tonumber)])
      asks: >-
        .data.orderBook.asks |
        map([(.amount | tonumber), (.price | tonumber)])
    ws_url: wss://ws.ddex.io/v3

  -
    name: ddex-v4
    active: true
    maker_fee: 0.1
    taker_fee: 0.3
    trade_gas: 0
    deposit_gas: 0
    withdrawal_gas: 0
    market_list:
      urls: 
        - https://api.ddex.io/v4/markets
      jq: |
        .data.markets | map({
          base: .baseAsset, 
          quote: .quoteAsset, 
          quantity_decimals: .amountDecimals, 
          price_decimals: .priceDecimals, 
          min_order_size: .minOrderSize,
          base_contract: .baseAssetAddress,
          quote_contract: .quoteAssetAddress
        })

    url: https://api.ddex.io/v4/markets/%base%-%quote%/orderbook?level=3
    jq:
      bids: >-
        .data.orderbook.bids |
        if length > 0 then map([(.amount | tonumber), (.price | tonumber)]) else [] end
      asks: >-
        .data.orderbook.asks |
        if length > 0 then map([(.amount | tonumber), (.price | tonumber)]) else [] end
    ws_url: wss://ws.ddex.io/v4

