---
  -
    name: oasis
    active: true
    maker_fee: 0.0
    taker_fee: 0.0
    market_list:
      url: https://api.oasisdex.com/v2/pairs
      jq: |
        .data | to_entries | map({
        id: .key, 
        base: .value.base, 
        quote: .value.quote, 
        price_decimals: .value.quotePrecision, 
        quantity_decimals: .value.basePrecision, 
        min_order_size: "1",
        base_contract: "oasis_",
        quote_contract: "oasis_"
        })

    url: https://api.oasisdex.com/v2/orders/%base%/%quote%
    jq:
      bids: >-
        .data.bids |
        map([(.[1] | tonumber), (.[0] | tonumber)])
      asks: >-
        .data.asks |
        map([(.[1] | tonumber), (.[0] | tonumber)])
    ws_url: wss://ws.switcheo.io
  -
    name: switcheo
    active: true
    maker_fee: 0.0
    taker_fee: 0.0
    market_list:
      url: https://api.switcheo.network/v2/exchange/pairs?show_details=1
      jq: |
        map({id: .name, 
        base: .baseAssetSymbol, 
        quote: .quoteAssetSymbol, 
        price_decimals: .precision, 
        quantity_decimals: .precision, 
        min_order_size: "1",
        base_contract: .baseContract,
        quote_contract: .quoteContract
        })

    url: https://api.switcheo.network/v2/offers/book\?pair=%quote%_%base%
    jq:
      bids: >-
        .bids |
        map([(.quantity | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.quantity | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.switcheo.io
  -
    name: tokenstore
    active: false
    maker_fee: 0.0
    taker_fee: 0.0
    market_list:
      url: https://v1-1.api.token.store/pairs
      jq: |
        map({id: .id, 
        base: .fromSymbol, 
        quote: .toSymbol, 
        price_decimals: 8, 
        quantity_decimals: 8, 
        min_order_size: "1",
        base_contract: "tknsor",
        quote_contract: "tknsor"
        })

    url: https://v1-1.api.token.store/orderbook/%quote%_%base%
    jq:
      bids: >-
        .bids |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.radarrelay.com/v3
  -
    name: radarrelay
    active: true
    maker_fee: 0.0
    taker_fee: 0.0
    market_list:
      url: https://api.radarrelay.com/v3/markets
      jq: |
        map({id: .id, 
        base: (.id|split("-")[0]), 
        quote: (.id|split("-")[1]), 
        price_decimals: .baseTokenDecimals, 
        quantity_decimals: .quoteTokenDecimals, 
        min_order_size: .minOrderSize,
        base_contract: .baseTokenAddress,
        quote_contract: .quoteTokenAddress
        })

    url: https://api.radarrelay.com/v3/markets/%base%-%quote%/book
    jq:
      bids: >-
        .bids |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
      asks: >-
        .asks |
        map([(.remainingBaseTokenAmount | tonumber), (.price | tonumber), .createdDate])
    ws_url: wss://ws.radarrelay.com/v3
    #0x SRA ws_url: wss://ws.radarrelay.com/0x/v3
  -
    name: ddex-v3
    active: true
    maker_fee: 0.1
    taker_fee: 0.3
    market_list:
      url: https://api.ddex.io/v3/markets
      jq: |
        .data.markets | map({
          base: (.id|split("-")[0]), 
          quote: (.id|split("-")[1]), 
          price_decimals: .priceDecimals, 
          quantity_decimals: .amountDecimals, 
          min_order_size: .minOrderSize,
          base_contract: .baseTokenAddress,
          quote_contract: .quoteTokenAddress
        })

    url: https://api.ddex.io/v3/markets/%base%-%quote%/orderbook
    jq:
      bids: >-
        .data.orderBook.bids |
        map([(.amount | tonumber), (.price | tonumber)])
      asks: >-
        .data.orderBook.asks |
        map([(.amount | tonumber), (.price | tonumber)])
    ws_url: wss://ws.ddex.io/v3

  -
    name: ddex-v4
    active: true
    maker_fee: 0.1
    taker_fee: 0.3
    market_list:
      url: https://api.ddex.io/v4/markets
      jq: |
        .data.markets | map({
          base: .baseAsset, 
          quote: .quoteAsset, 
          price_decimals: .priceDecimals, 
          quantity_decimals: .amountDecimals, 
          min_order_size: .minOrderSize,
          base_contract: .baseAssetAddress,
          quote_contract: .quoteAssetAddress
        })

    url: https://api.ddex.io/v4/markets/%base%-%quote%/orderbook?level=3
    jq:
      bids: >-
        .data.orderbook.bids |
        if length > 0 then map([(.amount | tonumber), (.price | tonumber)]) else [] end
      asks: >-
        .data.orderbook.asks |
        if length > 0 then map([(.amount | tonumber), (.price | tonumber)]) else [] end
    ws_url: wss://ws.ddex.io/v4

